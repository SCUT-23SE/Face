# coding: utf-8

from __future__ import absolute_import
from typing import List, Dict, Union, Any  # noqa: F401

from openapi_server.models.base_model_ import Model

class OneOfobjectarray(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
    Do not edit the class manually.
    """

    def __init__(self, value=None):  # noqa: E501
        """OneOfobjectarray - a model defined in OpenAPI

        :param value: The value of this OneOfobjectarray.  # noqa: E501
        :type value: Union[Dict[str, Any], List[Any]]
        """
        self.value = value

    @classmethod
    def from_dict(cls, dikt) -> 'OneOfobjectarray':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The OneOfobjectarray of this OneOfobjectarray.  # noqa: E501
        :rtype: OneOfobjectarray
        """
        return cls(value=dikt)

    @property
    def value(self) -> Union[Dict[str, Any], List[Any]]:
        """Gets the value of this OneOfobjectarray.

        :return: The value of this OneOfobjectarray.
        :rtype: Union[Dict[str, Any], List[Any]]
        """
        return self._value

    @value.setter
    def value(self, value: Union[Dict[str, Any], List[Any]]):
        """Sets the value of this OneOfobjectarray.

        :param value: The value of this OneOfobjectarray.
        :type value: Union[Dict[str, Any], List[Any]]
        """
        if value is None:
            raise ValueError("Invalid value for `value`, must not be `None`")  # noqa: E501

        self._value = value 